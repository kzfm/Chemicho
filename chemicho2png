#!/usr/bin/perl

use warnings;
use strict;
use Chemistry::File::SMILES;
use Chemistry::Ring 'aromatize_mol';

use FindBin;
use File::Spec;
use lib File::Spec->catdir($FindBin::Bin, 'lib');
use Chemicho;

use Getopt::Long;
use Data::Dumper;

use CDK::Smi2Png;

my $config = File::Spec->catfile($FindBin::Bin, 'chemicho.yaml');

GetOptions('--config=s', \$config, '--version' => \my $version);
Getopt::Long::Configure("bundling"); # allows -c -v

if ($version) {
    print "Chemicho version $Chemicho::VERSION\n";
    exit;
}

my $chemicho = Chemicho->new();
$chemicho->load($config);

my $smi = shift or die "$! smiles not found";
my $react = Chemistry::Mol->parse($smi, format => 'smiles');
aromatize_mol($react);

my ($prod,@products);
my $cycle = $chemicho->{Cycle}; # c
my $generation = $chemicho->{Generation}; # g
my $prefix = $chemicho->{Prefix}; # g
my $imgdir = $chemicho->{ImgDir} || "png"; # g
-d $imgdir or mkdir($imgdir, 0755); # mkdir if not dir

my ($parent,$total);

#react is 0-Generation
for(my $j=0;$j<=$generation;$j++){ # if c=3,g=3:
    $total += $cycle ** $j;       # total (3**0)+(3**1)+(3**2)+(3**3)
}

$react->name('react0');
push @products, $react;

my $now = 1; #react is 0-Generation
while($now < $total) { 
    # if cycle=2, 2/2=1(not parent), 2/(2+1)=0(parent)
    #$cycle == 1 ? $parent = $now - 1 : $parent = int(($now-1)/$cycle);
    my $parent = int(($now-1)/$cycle);
    my $react = $products[$parent]->clone;

    my $prod = $chemicho->mutate($react);

    if($prod){
	$prod->name($prefix . $now);
	aromatize_mol($prod);
	push @products, $prod;
	$now++;
    }
}    

shift @products; # remove original compounds

my $smic = CDK::Smi2Png->new();

for my $prod (@products){
    my $smiles = $prod->print(format => 'smiles', unique => 1, name => 1);
    my ($smi,$id) = split(/\t/,$smiles);
    $smic->writePNG($smi,300,300, "$imgdir/" .$id .".png");
}

